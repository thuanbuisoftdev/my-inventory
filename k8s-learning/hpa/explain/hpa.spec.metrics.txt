GROUP:      autoscaling
KIND:       HorizontalPodAutoscaler
VERSION:    v2

FIELD: metrics <[]MetricSpec>


DESCRIPTION:
    metrics contains the specifications for which to use to calculate the
    desired replica count (the maximum replica count across all metrics will be
    used).  The desired replica count is calculated multiplying the ratio
    between the target value and the current value by the current number of
    pods.  Ergo, metrics used must decrease as the pod count is increased, and
    vice-versa.  See the individual metric source types for more information
    about how each type of metric must respond. If not set, the default metric
    will be set to 80% average CPU utilization.
    MetricSpec specifies how to scale based on a single metric (only `type` and
    one other matching field should be set at once).
    
FIELDS:
  containerResource	<ContainerResourceMetricSource>
    containerResource refers to a resource metric (such as those specified in
    requests and limits) known to Kubernetes describing a single container in
    each pod of the current scale target (e.g. CPU or memory). Such metrics are
    built in to Kubernetes, and have special scaling options on top of those
    available to normal per-pod metrics using the "pods" source.

  external	<ExternalMetricSource>
    external refers to a global metric that is not associated with any
    Kubernetes object. It allows autoscaling based on information coming from
    components running outside of cluster (for example length of queue in cloud
    messaging service, or QPS from loadbalancer running outside of cluster).

  object	<ObjectMetricSource>
    object refers to a metric describing a single kubernetes object (for
    example, hits-per-second on an Ingress object).

  pods	<PodsMetricSource>
    pods refers to a metric describing each pod in the current scale target (for
    example, transactions-processed-per-second).  The values will be averaged
    together before being compared to the target value.

  resource	<ResourceMetricSource>
    resource refers to a resource metric (such as those specified in requests
    and limits) known to Kubernetes describing each pod in the current scale
    target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and
    have special scaling options on top of those available to normal per-pod
    metrics using the "pods" source.

  type	<string> -required-
    type is the type of metric source.  It should be one of "ContainerResource",
    "External", "Object", "Pods" or "Resource", each mapping to a matching field
    in the object.


